{"version":3,"sources":["components/WeatherDisplay.js","components/TempDisplay.js","components/Daily.js","components/Hourly.js","components/Details.js","components/Weather.js","components/App.js","index.js"],"names":["WeatherDisplay","prop","id","className","city","unix","date","Date","toLocaleDateString","month","day","year","convertDate","data","current","sunrise","src","weather","icon","main","TempDisplay","Math","round","temp","daily","max","min","Daily","length","shift","dailyArray","map","dt","toLocaleString","weekday","alt","Hourly","hourList","hourly","slice","hour","Details","degrees","convertTime","hours","getHours","getMinutes","substr","feels_like","description","sunset","uvi","humidity","wind_speed","wind_deg","floor","visibility","Weather","useState","setCity","newCity","setNewCity","undefined","setData","error","setError","unit","setUnit","openTab","setOpenTab","isLoading","setLoading","useForm","register","handleSubmit","reset","useEffect","fetchCity","a","fetch","mode","cityResponse","json","coordinates","coord","lon","lat","weatherResponse","name","setTimeout","onSubmit","faCircleNotch","onClick","faSearch","type","ref","required","placeholder","autocomplete","faExclamation","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bbcaad5c.chunk.js","sourcesContent":["/* eslint-disable jsx-a11y/alt-text */\nimport React from 'react'\n\nfunction WeatherDisplay(prop) {\n    let convertDate = (unix) => {\n        let date = new Date(unix * 1000);\n        let month = date.toLocaleDateString(\"en-US\", {month: \"long\"})\n        let day = date.toLocaleDateString(\"en-US\", {day: \"numeric\"})\n        let year = date.toLocaleDateString(\"en-US\", {year: \"numeric\"})\n\n        return (month + ' ' + day + ', ' + year);\n    }\n    \n    return (\n        <div id='weatherDisplay' className=\"space-y-3 tracking-widest\">\n            <p className=\"text-7xl 2xl:text-8xl capitalize\">{prop.city}</p>\n            <p className=\"text-xl\">{convertDate(prop.data.current.sunrise)}</p>\n            <img src={`http://openweathermap.org/img/w/${prop.data.current.weather[0].icon}.png`} className=\"h-24 w-24\" />\n            <p className=\"capitalize text-4xl\">{prop.data.current.weather[0].main}</p>\n        </div>\n    )\n}\n\nexport default WeatherDisplay","import React from 'react'\n\nfunction TempDisplay(prop) {\n   return (\n       <div>\n            <div>\n                <p className=\"text-9xl ml-4 mt-12 leading-none\">\n                    {Math.round(prop.data.current.temp) + '°'}\n                </p>\n            </div>\n\n            <div className=\"text-4xl flex space-x-6\">\n                <p>H: {Math.round(prop.data.daily[0].temp.max)}°</p>\n                <p>L: {Math.round(prop.data.daily[0].temp.min)}°</p>\n            </div>\n        </div>\n    )\n}\n\nexport default TempDisplay","import React from 'react'\n\nfunction Daily (prop) {\n    if (prop.data.daily.length > 7) {prop.data.daily.shift(0,1)}\n\n        const dailyArray = prop.data.daily.map(daily =>\n          <div key={daily.dt} className='flex-shrink h-full w-max'>\n                <div className='font-light'>{new Date(daily.dt * 1000).toLocaleString('en-US', {weekday: 'long'})}</div>\n                <img alt=\"\" src={ `http://openweathermap.org/img/w/${daily.weather[0].icon}.png` }/>\n                <div> {daily.weather[0].main} </div>\n                <div> {Math.round(daily.temp.max)}° </div>\n            </div>)\n\n    return(\n        <div className=\"items-center flex w-full justify-between pt-4 lg:text-xl m:text-lg truncate\">\n            {dailyArray}\n        </div>\n    )\n}\n\nexport default Daily","import React from 'react'\n\nfunction Hourly(prop) {\n    const hourList = prop.data.hourly.slice(1, 8).map(hour => \n        <div key={hour.dt} className=\"flex-shrink h-full w-max\">\n            <p className=\"font-light\">{new Date(hour.dt * 1000).toLocaleString('en-US', {hour: 'numeric'})}</p>\n            <img alt=\"\" src={`http://openweathermap.org/img/w/${hour.weather[0].icon}.png`}/>\n            <p >{hour.weather[0].main}</p>\n            <p >{Math.round(hour.temp)}°</p>\n        </div>\n    )\n\n    return (\n        <div className=\"items-center flex w-full justify-between pt-4 lg:text-xl m:text-lg\">\n            {hourList}\n        </div>\n    )\n}\nexport default Hourly","import React from 'react'\n\nfunction Details(prop) {\n    const convertTime = (unix) => {\n        let date = new Date(unix * 1000);\n        var hours = date.getHours();\n        var minutes = \"0\" + date.getMinutes();\n\n        if (hours > 12) {\n            hours -= 12;\n        }\n\n        return (hours + ':' + minutes.substr(-2));\n    }\n\n    const convertToDirection = (degrees) => {\n        const compass =[\"N\",\"NNE\",\"NE\",\"ENE\",\"E\",\"ESE\", \"SE\", \"SSE\",\"S\",\"SSW\",\"SW\",\"WSW\",\"W\",\"WNW\",\"NW\",\"NNW\"]\n        let direction = Math.floor((degrees/22.5)+ 0.5);\n        return compass[(direction % 16)]\n    }\n\n    return(\n        <div className=\"items-center space-y-6 h-full w-full pt-4 lg:text-xl m:text-lg truncate\">\n            <div className=\"text-2xl capitalize tracking-wide font-light\">\n                <p>Feels like {Math.round(prop.data.current.feels_like)}°. {prop.data.current.weather[0].description}\n                </p>\n            </div>\n            <div className='flex font-extralight justify-around'>\n                <div className=\"space-y-6\">\n                    <p>High: {Math.round(prop.data.daily[0].temp.max)}°</p>\n                    <p>Low: {Math.round(prop.data.daily[0].temp.min)}°</p>\n                </div>\n                <div className=\"space-y-6\">\n                    <p>Sunrise: {convertTime(prop.data.current.sunrise)} AM</p>\n                    <p>Sunset: {convertTime(prop.data.current.sunset)} PM</p>\n                </div>\n                <div className=\"space-y-6\">\n                    <p>UV Index: {prop.data.current.uvi}</p>\n                    <p>Humidity: {prop.data.current.humidity}%</p>\n                </div>\n                <div className=\"space-y-6\">\n                    <p>Wind: {prop.data.current.wind_speed} mph {convertToDirection(prop.data.current.wind_deg)}</p>\n                    <p>Visibility: {(prop.data.current.visibility/1000)} km</p>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Details","import React, {useState, useEffect} from 'react'\nimport { useForm } from 'react-hook-form'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faSearch, faExclamation, faCircleNotch } from '@fortawesome/free-solid-svg-icons'\nimport WeatherDisplay from './WeatherDisplay'\nimport TempDisplay from './TempDisplay'\nimport Daily from './Daily'\nimport Hourly from './Hourly'\nimport Details from './Details'\n\nfunction Weather() {\n    const [city, setCity] = useState('Long Beach')\n    const [newCity, setNewCity] = useState('')\n    const [data, setData] = useState(undefined)\n    const [error, setError] = useState('hidden')\n    const [unit, setUnit] = useState('imperial')\n    const [openTab, setOpenTab] = useState(1)\n    const [isLoading, setLoading] = useState(false)\n    const { register, handleSubmit, reset} = useForm()\n\n    useEffect(() => {\n        async function fetchCity(city) {\n            try {\n                setLoading(true)\n                const cityResponse = await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=44d60556067ec6f2529d69194fa8e8b8`, {mode: 'cors'})\n                const coordinates = await cityResponse.json()\n                const {lon , lat} = coordinates.coord\n                const weatherResponse = await fetch(`https://api.openweathermap.org/data/2.5/onecall?lat=${lat}&lon=${lon}&exclude=minutely,alerts&appid=44d60556067ec6f2529d69194fa8e8b8&units=${unit}`, {mode: 'cors'})\n                const weather = await weatherResponse.json()\n\n                setCity(coordinates.name)\n                setLoading(false)\n                setData(weather)\n            } catch {\n                setError('block')\n                setLoading(false)\n                setTimeout(() => {\n                    setError('hidden')\n                }, 4000)\n            }\n        }\n        newCity === '' ? fetchCity(city) : fetchCity(newCity)\n    }, [city, newCity, unit])\n\n    const onSubmit = (data) => {\n        setNewCity(data.city)\n        reset()\n    }\n\n    const handleClick = () => {unit === 'imperial' ? setUnit('metric') : setUnit('imperial')}\n\n    return (\n        <div id=\"mainContainer\" className=\"m-28 py-4 px-12 w-9/12 max-w-6xl h-4/5 2xl:h-3/5 min-w-min\n        bg-white bg-opacity-10 rounded-3xl text-white font-sans font-thin shadow-2xl select-none truncate\">\n\n            <div className='flex flex-col absolute top-0 right-0'>\n                <form \n                    className=\"shadow-xl flex p-4 mx-5 mt-5 items-center flex bg-white w-72 h-14 rounded-md\" \n                    onSubmit={handleSubmit(onSubmit)}>\n\n                {isLoading ?\n                    <FontAwesomeIcon \n                        className='text-2xl text-black animate-spin' \n                        icon={faCircleNotch} /> :\n\n                    <FontAwesomeIcon \n                        className='text-2xl text-black hover:text-gray-500 cursor-pointer' \n                        onClick={handleSubmit(onSubmit)} \n                        icon={faSearch} />\n                    }\n\n                    <input \n                        className=\"text-black mx-3 h-auto w-full outline-none font-sans text-xl tracking-wide\" \n                        type=\"search\"\n                        name=\"city\"\n                        ref={register({ required: true })}\n                        placeholder=\"Search city...\" \n                        autocomplete=\"off\" />\n                </form>\n\n                <div className={error}>\n                    <div className=\"bg-red-500 mx-5 p-4 h-14 w-72 rounded-md text-white\"> \n                        <FontAwesomeIcon className='animate-bounce' icon={faExclamation}/> <span className=\"pl-4 font-light text-l\">Please enter a valid city name...</span>\n                    </div>\n                </div>\n\n\n            </div>\n\n        {data !== undefined && \n            \n            <div className=\"flex flex-col space-y-6 2xl:justify-center\">\n                <div className='p-1 h-2/4 min-w-max md:space-x-18 xl:mx-10 flex justify-between'>\n                    <WeatherDisplay data = {data} city = {city} /> \n                    <TempDisplay data = {data} />\n                </div>\n\n                <div className='mx-2 divide-y-2 divide-gray-200 divide-opacity-20'>\n                    <ul className=\"flex space-x-8 text-xl\">\n                        <li \n                            className={openTab === 1 ? 'text-white font-extralight focus:outline-none cursor-pointer'  : \n                            'text-gray-300 text-opacity-60 hover:text-white transition duration-300 ease-in-out focus:outline-none cursor-pointer'}\n                            onClick={() => {setOpenTab(1)}}>\n                            Daily\n                        </li>\n                        <li \n                            className={openTab === 2 ? 'text-white font-extralight focus:outline-none cursor-pointer ' :\n                            'text-gray-300 text-opacity-60 hover:text-white transition duration-300 ease-in-out focus:outline-none cursor-pointer'}\n                            onClick={() => {setOpenTab(2)}}>\n                            Hourly\n                        </li>\n                        <li \n                            className={openTab === 3 ? 'text-white font-extralight focus:outline-none cursor-pointer ' :\n                            'text-gray-300 text-opacity-60 hover:text-white transition duration-300 ease-in-out focus:outline-none cursor-pointer'}\n                            onClick={() => {setOpenTab(3)}}>\n                            Details\n                        </li>\n                        <li className='ml-auto'>\n                            <button \n                                className='font-thin text-gray-300 text-opacity-60 hover:text-white transition duration-300 ease-in-out focus:outline-none' \n                                onClick={handleClick}>\n                                {unit==='imperial'? 'C°': 'F°'}\n                            </button>\n                        </li>\n                    </ul>\n\n                    <div>\n                        <div className={openTab === 1 ? \"block\" : \"hidden\"}>\n                            <Daily data = {data}/>\n                        </div>\n                        <div className={openTab === 2 ? \"block\" : \"hidden\"}>\n                            <Hourly data = {data} />\n                        </div>\n                        <div className={openTab === 3 ? \"block\" : \"hidden\"}>\n                            <Details data = {data}/>\n                        </div>   \n                    </div>\n                </div>\n            </div>}\n        </div>\n    )\n}\n\nexport default Weather","import React from 'react'\nimport Weather from './Weather'\n\nfunction App() {\n\n  return (\n    <div className=\"h-screen flex justify-center bg-fixed bg-gradient-to-b from-blue-700 via-blue-500 to-blue-300 overflow-hidden\">\n      <Weather />\n    </div>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport './index.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}